/**********************************************************
**   SIMPLE.ATG
**   Coco/R C Simple Compiler/Interpreter Example.
**   May 24,1996  Version 1.06
**********************************************************/

COMPILER simple
/* Taste compiler/interpreter */

CHARACTERS

letter = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".

digit = "123456789".

zero = "0".

cr = '\u000d'.

lf = '\u000a'.

tab = '\u0009'.

TOKENS

varid = letter {letter | digit | zero}.

integer = digit {digit | zero}.

string = "'" { letter } "'".

COMMENTS FROM "/*" TO "*/" NESTED

IGNORE cr + lf + tab

PRODUCTIONS

/*------------------------------------------------------------------------*/

simple = "PROGRAM" clist "END".

/*------------------------------------------------------------------------*/

clist = stmt { stmt }.

/*------------------------------------------------------------------------*/

stmt = ( sdecl | print | sinput | vardec | swhile | scond ) ";".

/*------------------------------------------------------------------------*/

print = "PRINT" ( string | cexpr ).

/*------------------------------------------------------------------------*/

sinput = "INPUT" varid.

/*------------------------------------------------------------------------*/

vardec = varid [":=" ( string | integer )].

/*------------------------------------------------------------------------*/

sdecl = "VAR" ( "INT" | "STR" ) varid.

/*------------------------------------------------------------------------*/

swhile = "WHILE" "(" lexpr "," stmt ")".

/*------------------------------------------------------------------------*/

scond = "IF" "(" lexpr "," stmt ")".

/*------------------------------------------------------------------------*/

expr =  "(" cexpr ")".
factor = integer | vardec.

/*------------------------------------------------------------------------*/

cexpr = (factor [( aritop | relop ) factor] ) | expr.

/*------------------------------------------------------------------------*/

aritop = ( "+" | "-" | "*" | "DIV" ).

/*------------------------------------------------------------------------*/

relop = ( "<" | ">" | "==" ).

/*------------------------------------------------------------------------*/

lexpr = ".(" lcond ").".

/*------------------------------------------------------------------------*/

lcond = ("NOT" "(" cexpr ")" | crelexpr | "TRUE" | "FALSE" ).

/*------------------------------------------------------------------------*/

crelexpr = cexpr [ ("AND" | "OR") cexpr ].

END simple.
